# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #- name: Download a Build Artifact
      #  uses: actions/download-artifact@v3.0.0
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          branch: llvmorg-16.0.3
        
        
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
         cmake-version: '3.24.2'
         
      - name: setup ninja
        uses: seanmiddleditch/gha-setup-ninja@master
       
      - name: dev-cmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86
        
      - name: Cache
        uses: actions/cache@v1.2.1
        with:
          # A directory to store and save the cache
          path: D:/a/llvm-project/llvm-project/build/
          # An explicit key for restoring and saving the cache
          key: abcdefghij
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        
      - name : build
        run: |
          mkdir build
          cd build
          set CC=cl    
          set CXX=cl
          mkdir install
          cmake -GNinja -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX="D:/a/llvm-project/llvm-project/build/install" -DLLVM_ENABLE_PROJECTS='clang;lld;clang-tools-extra' -DLLVM_ENABLE_RUNTIMES=all ../llvm
          ninja -w dupbuild=warn
          cmake --install . --prefix "D:/a/llvm-project/llvm-project/build/install"
          dir
          cd ..
          dir 
          cd build

      - name: compress
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
            D:/a/llvm-project/llvm-project/build/install
          outPath: install.tar.gz
      
      - name: compress_
        uses: a7ul/tar-action@v1.1.0
        id: compress1
        with:
          command: c
          files: |
            ./build
          outPath: full_build.tar.gz
          
      - name: upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: bin_only
          path: .\install.tar.gz
        
        
      - name: upload-artifact_full
        uses: actions/upload-artifact@v3
        with:
          name: full_build_output
          path: .\full_build.tar.gz
